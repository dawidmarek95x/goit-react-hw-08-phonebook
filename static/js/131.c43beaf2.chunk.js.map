{"version":3,"file":"static/js/131.c43beaf2.chunk.js","mappings":"6QAEaA,E,QAAmBC,GAAAA,IAAH,ulD,4DCiH7B,EAxGqB,WACnB,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,WAAMC,GAAN,0FACpBA,EAAEC,iBACIC,EAAOF,EAAEG,OACTC,EAAYF,EAAKE,UAAUC,MAC3BC,EAAWJ,EAAKI,SAASD,MACzBE,EALc,UAKJH,EALI,YAKSE,GACvBE,EAAQN,EAAKM,MAAMH,MACnBI,EAAWP,EAAKO,SAASJ,MACzBK,EAAkBR,EAAKQ,gBAAgBL,MAEzCI,IAAaC,EAVG,2CAWXC,EAAAA,EAAAA,GAAc,4CAXH,eAcdC,EAAc,CAAEL,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,GAdf,UAedf,EAAOkB,GACVC,SACAC,MAAK,YAAuC,IAApCC,EAAmC,EAAnCA,MAAmC,IAA5BC,KAAQR,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,KAC7BU,EAAAA,EAAAA,IAAY,QAASF,GACjBA,GACFpB,GAASuB,EAAAA,EAAAA,IAAQ,CAAEV,MAAAA,EAAOD,KAAAA,IAE7B,IACAY,OAAM,YACLR,EAAAA,EAAAA,GAAc,+CACf,IAzBiB,yBA2BAM,EAAAA,EAAAA,IAAY,SA3BZ,gBA4BNG,KADRL,EA3Bc,4EAgCdpB,GAAS0B,EAAAA,EAAAA,IAASN,IAhCJ,yBAiCdlB,EAAS,aAjCK,QAkCpBK,EAAKoB,QAlCe,4CAAH,sDAqCnB,OACE,+BACE,UAAC/B,EAAD,YACE,0CACA,kBAAMgC,SAAUxB,EAAhB,WACE,0BACE,2CAEE,kBAAOyB,KAAK,OAAOjB,KAAK,YAAYkB,UAAQ,UAGhD,0BACE,0CAEE,kBAAOD,KAAK,OAAOjB,KAAK,WAAWkB,UAAQ,UAG/C,0BACE,uCAEE,kBACED,KAAK,QACLjB,KAAK,QACLmB,QAAQ,0CACRC,aAAa,QACbF,UAAQ,UAId,0BACE,yCAEE,kBACED,KAAK,WACLjB,KAAK,WACLmB,QAAQ,uCACRE,MAAM,yGACND,aAAa,eACbF,UAAQ,UAId,0BACE,iDAEE,kBACED,KAAK,WACLjB,KAAK,kBACLmB,QAAQ,uCACRE,MAAM,yGACND,aAAa,uBACbF,UAAQ,UAId,mBAAQD,KAAK,SAAb,4BAKT,C,qEC/GYb,EAAgB,SAACkB,GAAD,IAAUC,EAAV,uDAAyB,IAAMC,EAA/B,uDAA0C,YAA1C,OAC3BC,EAAAA,GAAAA,KAAWH,EAAS,CAClBE,SAAUA,EACVE,UAAWH,EACXI,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUlB,GARe,C","sources":["pages/Registration/Registration.styled.js","pages/Registration/Registration.jsx","utils/Notifications/Notifications.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const RegistrationForm = styled.div`\n  padding: 15px 50px;\n  width: 100%;\n  \n  & h2 {\n    margin-top: 0;\n    text-align: center;\n  }\n\n  & form {\n    display: flex;\n    flex-direction: column;\n    border: none;\n    border-radius: 10px;\n  }\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    font-weight: 500;\n  }\n\n  & input {\n    font-size: 14px;\n    margin-top: 5px;\n    padding: 5px;\n    border: 1px solid gray;\n    outline: none;\n    line-height: 1.25;\n    background-color: #F6FCCE;\n    border-radius: 5px;\n\n    &:hover {\n      border-color: rgb(59, 59, 59);\n      box-shadow: 0px 0px 4px 0px rgba(59, 59, 59, 0.6);\n      transition: border-color 400ms, box-shadow 400ms;\n    }\n\n    &:focus {\n      border-color: #361C01;\n      box-shadow: 0px 0px 5px 0px #361C01;\n      transition: border-color 600ms, box-shadow 600ms;\n    }\n  }\n\n  & button {\n    max-width: 120px;\n    margin: 0 auto;\n    padding: 5px 10px;\n    border: 1px solid rgba(138, 63, 50, 0.8);\n    border-radius: 5px;\n    font-size: 14px;\n    text-transform: capitalize;\n    color: black;\n    background-color: rgb(255, 255, 255);\n    box-shadow: 0px 0px 2px 0px rgba(227, 152, 22, 0.7);\n    transition: color 600ms, border-color 600ms, background-color 600ms, box-shadow 600ms;\n\n    &:hover {\n      color: white;\n      border-color: rgba(138, 63, 50, 0.8);\n      background-color: rgba(138, 63, 50, 0.8);\n      box-shadow: 0px 0px 4px 0px rgba(138, 63, 50, 0.8);\n      transition: color 400ms, border-color 400ms, background-color 400ms, box-shadow 400ms;\n    }\n  }\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSignupMutation } from 'services/phonebookApi';\nimport { RegistrationForm } from './Registration.styled';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { warningNotify } from 'utils/Notifications/Notifications';\nimport Cookies from 'js-cookie';\nimport { useDispatch } from 'react-redux';\nimport { addToken } from 'redux/slices/tokenSlice';\nimport { addUser } from 'redux/slices/userSlice';\n\nconst Registration = () => {\n  const [signup] = useSignupMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const firstName = form.firstName.value;\n    const lastName = form.lastName.value;\n    const name = `${firstName} ${lastName}`;\n    const email = form.email.value;\n    const password = form.password.value;\n    const passwordConfirm = form.passwordConfirm.value;\n\n    if (password !== passwordConfirm) {\n      return warningNotify('Password and confirmation do not match!');\n    }\n\n    const credentials = { name, email, password };\n    await signup(credentials)\n      .unwrap()\n      .then(({ token, user: { email, name } }) => {\n        Cookies.set('token', token);\n        if (token) {\n          dispatch(addUser({ email, name }));\n        }\n      })\n      .catch(() => {\n        warningNotify('User with this email address already exists!');\n      });\n\n    const token = await Cookies.get('token');\n    if (token === undefined) {\n      return;\n    }\n\n    await dispatch(addToken(token));\n    await navigate('/contacts');\n    form.reset();\n  };\n\n  return (\n    <>\n      <RegistrationForm>\n        <h2>Registration</h2>\n        <form onSubmit={submitHandler}>\n          <div>\n            <label>\n              First name\n              <input type=\"text\" name=\"firstName\" required />\n            </label>\n          </div>\n          <div>\n            <label>\n              Last name\n              <input type=\"text\" name=\"lastName\" required />\n            </label>\n          </div>\n          <div>\n            <label>\n              E-mail\n              <input\n                type=\"email\"\n                name=\"email\"\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                autoComplete=\"email\"\n                required\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                title=\"Must contain at least one uppercase and lowercase letter, one number and at least 8 or more characters\"\n                autoComplete=\"new-password\"\n                required\n              />\n            </label>\n          </div>\n          <div>\n            <label>\n              Confirm password\n              <input\n                type=\"password\"\n                name=\"passwordConfirm\"\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                title=\"Must contain at least one uppercase and lowercase letter, one number and at least 8 or more characters\"\n                autoComplete=\"new-password-confirm\"\n                required\n              />\n            </label>\n          </div>\n          <button type=\"submit\">Sign up</button>\n        </form>\n      </RegistrationForm>\n    </>\n  );\n};\n\nexport default Registration;\n","import { toast } from 'react-toastify';\n\nexport const warningNotify = (message, closingDelay = 5000, position = 'top-right') =>\n  toast.warn(message, {\n    position: position,\n    autoClose: closingDelay,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });"],"names":["RegistrationForm","styled","useSignupMutation","signup","dispatch","useDispatch","navigate","useNavigate","submitHandler","e","preventDefault","form","target","firstName","value","lastName","name","email","password","passwordConfirm","warningNotify","credentials","unwrap","then","token","user","Cookies","addUser","catch","undefined","addToken","reset","onSubmit","type","required","pattern","autoComplete","title","message","closingDelay","position","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress"],"sourceRoot":""}