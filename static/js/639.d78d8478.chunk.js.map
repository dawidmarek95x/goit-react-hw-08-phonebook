{"version":3,"file":"static/js/639.d78d8478.chunk.js","mappings":"2SAEaA,E,QAAYC,GAAAA,IAAH,ulD,SC2DtB,EArDc,WACZ,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAa,mCAAG,WAAMC,GAAN,sFACdC,EAAOD,EAAEE,OACTC,EAAQF,EAAKE,MAAMC,MACnBC,EAAWJ,EAAKI,SAASD,MAEzBE,EAAc,CAAEH,MAAAA,EAAOE,SAAAA,GAC7BL,EAAEO,iBANkB,SAOdb,EAAMY,GACTE,SACAC,MAAK,gBAAEC,EAAF,EAAEA,MAAF,OAAaC,EAAAA,EAAAA,IAAY,QAASD,EAAlC,IACLE,OAAM,WACLC,MAAM,8DACP,IAZiB,uBAcAF,EAAAA,EAAAA,IAAY,SAdZ,cAcdD,EAdc,OAepBI,QAAQC,IAAIL,GAfQ,UAgBdf,GAASqB,EAAAA,EAAAA,IAASN,IAhBJ,yBAiBdb,EAAS,aAjBK,QAkBpBI,EAAKgB,QAlBe,4CAAH,sDAqBnB,OACE,UAAC1B,EAAD,YACE,mCACA,kBAAM2B,SAAUnB,EAAhB,WACE,0BACE,uCAEE,kBAAOoB,KAAK,QAAQC,KAAK,QAAQC,aAAa,QAAQC,UAAQ,UAGlE,0BACE,yCAEE,kBACEH,KAAK,WACLC,KAAK,WACLC,aAAa,mBACbC,UAAQ,UAId,mBAAQH,KAAK,SAAb,yBAIP,C","sources":["pages/Login/Login.styled.js","pages/Login/Login.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoginForm = styled.div`\n  padding: 15px 50px;\n  width: 100%;\n  \n  & h2 {\n    margin-top: 0;\n    text-align: center;\n  }\n\n  & form {\n    display: flex;\n    flex-direction: column;\n    border: none;\n    border-radius: 10px;\n  }\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    font-weight: 500;\n  }\n\n  & input {\n    font-size: 14px;\n    margin-top: 5px;\n    padding: 5px;\n    border: 1px solid gray;\n    outline: none;\n    line-height: 1.25;\n    background-color: #F6FCCE;\n    border-radius: 5px;\n\n    &:hover {\n      border-color: rgb(59, 59, 59);\n      box-shadow: 0px 0px 4px 0px rgba(59, 59, 59, 0.6);\n      transition: border-color 400ms, box-shadow 400ms;\n    }\n\n    &:focus {\n      border-color: #361C01;\n      box-shadow: 0px 0px 5px 0px #361C01;\n      transition: border-color 600ms, box-shadow 600ms;\n    }\n  }\n\n  & button {\n    max-width: 120px;\n    margin: 0 auto;\n    padding: 5px 10px;\n    border: 1px solid rgba(138, 63, 50, 0.8);\n    border-radius: 5px;\n    font-size: 14px;\n    text-transform: capitalize;\n    color: black;\n    background-color: rgb(255, 255, 255);\n    box-shadow: 0px 0px 2px 0px rgba(227, 152, 22, 0.7);\n    transition: color 600ms, border-color 600ms, background-color 600ms, box-shadow 600ms;\n\n    &:hover {\n      color: white;\n      border-color: rgba(138, 63, 50, 0.8);\n      background-color: rgba(138, 63, 50, 0.8);\n      box-shadow: 0px 0px 4px 0px rgba(138, 63, 50, 0.8);\n      transition: color 400ms, border-color 400ms, background-color 400ms, box-shadow 400ms;\n    }\n  }\n`;","import Cookies from 'js-cookie';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addToken } from 'redux/slices/tokenSlice';\nimport { useLoginMutation } from 'services/phonebookApi';\nimport { LoginForm } from './Login.styled';\n\nconst Login = () => {\n  const [login] = useLoginMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const submitHandler = async e => {\n    const form = e.target;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    const credentials = { email, password };\n    e.preventDefault();\n    await login(credentials)\n      .unwrap()\n      .then(({token}) => Cookies.set('token', token))\n      .catch(() => {\n        alert('The given data is incorrect. Check your email and password.');\n      });\n\n    const token = await Cookies.get('token');\n    console.log(token);\n    await dispatch(addToken(token));\n    await navigate('/contacts');\n    form.reset();\n  };\n\n  return (\n    <LoginForm>\n      <h2>Login</h2>\n      <form onSubmit={submitHandler}>\n        <div>\n          <label>\n            E-mail\n            <input type=\"email\" name=\"email\" autoComplete=\"email\" required />\n          </label>\n        </div>\n        <div>\n          <label>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"current-password\"\n              required\n            />\n          </label>\n        </div>\n        <button type=\"submit\">Log in</button>\n      </form>\n    </LoginForm>\n  );\n};\n\nexport default Login;\n"],"names":["LoginForm","styled","useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","submitHandler","e","form","target","email","value","password","credentials","preventDefault","unwrap","then","token","Cookies","catch","alert","console","log","addToken","reset","onSubmit","type","name","autoComplete","required"],"sourceRoot":""}